spring.profiles.active=dev
#或者使用命令  --spring.profiles.active=   隔离式应用配置方式  遵循排列规则  命令行优先 
#无条件添加激活配置  低于	setAdditonalPrrofies
#该选项里的配置也会被激活
spring.profiles.include=


#否则默认密码不会打印出来
logging.level.org.springframework.security=info


#这样所有的用户都可以用Actuator
#management.security.enabled=false


#SpringBoot提供了一个接口org.springframework.boot.Banner，他的实例可以被传给SpringApplication的setBanner(banner)方法。如果你闲得不行非要着重美化这个命令行输出的话，可以重写Banner接口的printBanner方法。
#spring.main.show-banner=false

#在application.proerpties进行banner的显示和关闭

# JavaMailSender 邮件发送的配置
#smtp是邮件发送协议，pop3和imap是邮件接收协议。因为我们要发送邮件，因此是smtp
#spring.mail.protocol=smtp 
#邮件发送服务器的主机，这里采用的是qq邮箱来发送邮件
spring.mail.host=smtp.qq.com
spring.mail.username=1552174353@qq.com
#QQ授权码  一般为邮箱密码
spring.mail.password=xwvsteojokfybacd
spring.mail.port=25   
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

server.ssl.key-store=keystore.p12
server.ssl.key-store-password=111111
server.ssl.keyStoreType=PKCS12
server.ssl.keyAlias:tomcat


#文件上传相关配置
#org.springframework.boot.autoconfigure.web.MultipartProperties 具体配置类
#spring.http.multipart.enabled=true #默认支持文件上传.
#spring.http.multipart.file-size-threshold=0 #支持文件写入磁盘.
# 上传文件的临时目录
#spring.http.multipart.location=
 # 最大支持文件大小
spring.http.multipart.max-file-size=2Mb
#spring.http.multipart.max-request-size=10Mb # 最大支持请求大小

#自定义打印banner
spring.banner.location=classpath:banner.txt
spring.banner.charset=utf-8



####################################################################
#                              web模板引擎配置    
############################################################
#
# thymeleaf通用配置
#
############################################################
#spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
spring.thymeleaf.cache=false


# security   自定配置用户名密码


#默认是没有权限控制的，
#以下配置权限认证，只有当用户名是admin且密码为123456，且拥有SUPERADMIN角色是才能访问
#默认角色为ACTUATOR
#对于密码，生产上可以配置密文
#通过SecurityProperties被外部化了   acuator的安全特性配置
management.security.enabled=false
#security.user.name=admin
#security.user.password=123456 
#management.security.roles=SUPERADMIN



#oauth2客户端配置





############################################################
#
# freemarker 通用配置
#
############################################################
spring.freemarker.template-loader-path=classpath:/templates/freemarker
spring.freemarker.cache=false
spring.freemarker.charset=UTF-8
spring.freemarker.check-template-location=true
spring.freemarker.content-type=text/html
spring.freemarker.expose-request-attributes=true
spring.freemarker.expose-session-attributes=true
spring.freemarker.request-context-attribute=request
spring.freemarker.suffix=.ftl

####################################################################


#######################################################################

#jpa配置
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

#启动热部署    是否允许重启
spring.devtools.restart.enabled=true


spring.devtools.restart.additional-paths=src/main/java

restart.include.mapper=/mapper-[\\w-\\.]+jar
restart.include.pagehelper=/pagehelper-[\\w-\\.]+jar
#排除静态资源文件的重启
spring.devtools.restart.exclude=static/**,public/**

#spring.devtools.restart.exclude=WEB-INF/**

##########################################################
#              配置servlet容器  自定义Servlet容器
#                 配置Tomcat
##########################################################
#网络设置
server.port=9001
#server.address= # bind to a specific NIC
#session设置   是否持久化  超时时间   数据保存位置  cookie设置
#server.session-timeout= # session timeout in seconds
#the context path, defaults to '/'
#server.context-path=/spring-boot
#server.servlet-path= # the servlet path, defaults to '/'
#Error管理错误页面位置
#server.error.path=

#SSL设置
#HTTTP压缩
#server.tomcat.access-log-pattern= # log pattern of the access log
#server.tomcat.access-log-enabled=false # is access logging enabled
#server.tomcat.protocol-header=x-forwarded-proto # ssl forward headers
#server.tomcat.remote-ip-header=x-forwarded-for
#server.tomcat.basedir=/tmp # base dir (usually not needed, defaults to tmp)
#server.tomcat.background-processor-delay=30; # in seconds
#server.tomcat.max-threads = 0 # number of threads in protocol handler
#server.tomcat.uri-encoding = UTF-8 # character encoding to use for URL decoding

##########################################################
#Nosql  Mongdb    Neo4j   ElasticSearch  Slor  Redis  Gemfire  Couchbase   Cassandra 
############################################################
#
# REDIS 配置
# 如果存在commons-pool2默认获取一个连接池
############################################################
spring.redis.database=1
spring.redis.host=127.0.0.1
#defaut port
spring.redis.port=6379 
spring.redis.password=
spring.redis.pool.max-active=1000
spring.redis.pool.max-wait=-1
spring.redis.pool.max-idle=10
spring.redis.pool.min-idle=2
spring.redis.timeout=0
####################################################
#  Mongdb 类Json模式替换传统基于表的关系数据库
#################################################
#spring.data.mongodb.uri=
#spring.data.mongodb.host=
#spring.data.mongodb.port=27017

#添加内置依赖
#de.flapdoodle.embed   de.flapdoodle.embed.mogodb


#开启h2浏览器控制台 好像SpringBoot只要添加依赖会自动开启
#spring.h2.console.enabled=true
#spring.h2.console.path=#自定义路径
#security基本认证保护控制台
#security.user.role=#1,2,3
#security.basic.authorize-mode=
#security.basic.enabled=

############################################################
#   代码自动生成jooq
# mysql数据源配置
#
############################################################
spring.datasource.url=jdbc:mysql://localhost:3306/leecx
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.initial-size=1
spring.datasource.druid.min-idle=1
spring.datasource.druid.max-active=20
spring.datasource.druid.test-on-borrow=true
spring.datasource.druid.stat-view-servlet.allow=true

############################################################
#
#  mybatis通用配置 
#
############################################################
# mybatis 
mybatis.type-aliases-package=com.example.demo.pojo
mybatis.mapper-locations=classpath:mapper/*.xml
# 
mapper.mappers=com.example.demo.util.mybatis.MyMapper
mapper.not-empty=false
mapper.identity=MYSQL
# 分页配置
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

######################################
#  es 开源 分布式  实时搜索和分析引擎  提供自动化配置          使用Jest连接   也可以使用SpringData连接  默认内嵌在本地 内存服务器  当前工作目录为home
########################  log路径
spring.data.elasticsearch.properties.path.data=./elasticsearch/data
#可以切换到远端服务器#配置es节点信息，逗号分隔，如果没有指定，则启动ClientNode
spring.data.elasticsearch.cluster-nodes=localhost:9300
#默认名称
spring.data.elasticsearch.cluster-name=elasticsearch

#spring.mvc.static-path-pattern=/static/**

############################################################
#
# message配置
#
############################################################
spring.messages.basename=i18n/messages
spring.messages.cache-seconds=3600
spring.messages.encoding=UTF-8
